name: OAS PR health check

on:
    pull_request:
        types: [opened, reopened, synchronize]
        branches:
            - master
    push:
       branches:
           - master

jobs:
    pr-health-check:
        runs-on: ubuntu-latest    
        permissions:
          contents: write
          pull-requests: write
          actions: read
        
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set up Node environment
              uses: actions/setup-node@v4
              with:
                node-version: 20
                registry-url: 'https://registry.npmjs.org'
  
            - name: Install dependencies
              timeout-minutes: 5
              run: |
                npm config set registry https://registry.npmjs.org
                npm ci --verbose
            
            - name: Install octokit dependencies
              run: npm i
              working-directory: ${{ github.workspace }}/.github/octokit
      
            - name: Get github app access token
              id: get_access_token
              env:
                GITHUB_APP_ID: ${{ secrets.XERO_GITHUB_APP_ID }}
                GITHUB_APP_PRIVATE_KEY: ${{ secrets.XERO_GITHUB_APPLICATION_KEY }}
              uses: actions/github-script@v7
              with:
                result-encoding: string
                script: |
                  const { getAccessToken } = await import('${{ github.workspace }}/.github/octokit/index.js')
                  const token = await getAccessToken()
                  return token

            - name: Trigger all SDK workflow
              id: return_dispatch
              env:
                GH_TOKEN: ${{ steps.get_access_token.outputs.result }}
              run: |
                BRANCH_NAME="${{ github.event_name == 'pull_request' && github.head_ref || 'master' }}"
                
                # Trigger the workflow and capture the response
                gh workflow run pr.yml \
                  --repo xero-internal/xeroapi-sdk-codegen \
                  --ref master \
                  --field branch_name="$BRANCH_NAME"
                
                # Wait a moment for the run to be created
                sleep 5
                
                # Get the latest run ID for the workflow
                RUN_ID=$(gh run list \
                  --repo xero-internal/xeroapi-sdk-codegen \
                  --workflow=pr.yml \
                  --limit 1 \
                  --json databaseId \
                  --jq '.[0].databaseId')
                
                echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
                echo "Triggered workflow run ID: $RUN_ID"
            
            - name: Checking SDK health status
              uses: Codex-/await-remote-run@v1.12.2
              with:
                token: ${{ steps.get_access_token.outputs.result }}
                repo: xeroapi-sdk-codegen
                owner: xero-internal
                run_id: ${{ steps.return_dispatch.outputs.run_id }}
                workflow_time_minimum: 60
                max_timeout: 3600
              
